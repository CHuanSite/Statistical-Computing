mie.tmp = mie.sub %>% filter(room == room.array[i] , visit == visit.array[j])
if(nrow(mie.tmp) != 0){
qplot(timepoint, value, data = mie.tmp)
}
}
}
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
for( i in seq_along(room.array)){
print(i)
for ( j in seq_along(visit.array)){
print(j)
mie.tmp = mie.sub %>% filter(room == room.array[i] , visit == visit.array[j])
if(nrow(mie.tmp) != 0){
qplot(timepoint, value, data = mie.tmp)
}else{
;
}
}
}
}
idVisualize(20)
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
for( i in seq_along(room.array)){
print(i)
for ( j in seq_along(visit.array)){
print(j)
mie.tmp = mie.sub %>% filter(room == room.array[i] , visit == visit.array[j])
if(nrow(mie.tmp) != 0){
plot(timepoint, value, data = mie.tmp)
}else{
;
}
}
}
}
idVisualize(20)
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
for( i in seq_along(room.array)){
print(i)
for ( j in seq_along(visit.array)){
print(j)
mie.tmp = mie.sub %>% filter(room == room.array[i] , visit == visit.array[j])
if(nrow(mie.tmp) != 0){
plot(mie.tmp$timepoint, mie.tmp$value)
}else{
;
}
}
}
}
idVisualize(20)
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
g <- ggplot(mie.sub, aes(timepoint,value))
}
?facet_grid
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point() + facet_grid(. ~room+visit)
}
idVisualize(20)
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point() + facet_grid(room+visit)
}
idVisualize(20)
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point() + facet_grid(room+visit.)
}
idVisualize(20)
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point() + facet_grid(room~visit , nrow=2 , ncol=3)
}
idVisualize(20)
idVisualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
room.array = mie.sub %>% select(room) %>% table %>% names
visit.array = mie.sub %>% select(visit) %>% table %>% names %>% as.integer
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point() + facet_wrap(room~visit , nrow=2 , ncol=3)
}
idVisualize(20)
room.array
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point() + facet_wrap(room~visit , nrow=2 , ncol=3) + labs(title = "Visualize the Data")
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/3) + facet_wrap(visit~room , nrow=3 , ncol=2) + labs(title = "Visualize the Data")
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/3) + facet_grid(visit~room) + labs(title = "Visualize the Data")
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/3) + facet_wrap(visit~room) + labs(title = "Visualize the Data")
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/3) + facet_wrap(visit + room , nrow = 3 , ncol = 2) + labs(title = "Visualize the Data")
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/3) + facet_wrap(~visit+room , nrow = 3 , ncol = 2) + labs(title = "Visualize the Data")
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(~visit+room , nrow = 3 , ncol = 2) + labs(title = "Visualize the Data")
}
id.Visualize(20)
?facet_wrap
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(~visit+room , nrow = 3 , ncol = 2) + labs(title = "Visualize the Data")
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(~visit+room) + labs(title = "Visualize the Data")
}
id.Visualize(20)
knitr::opts_chunk$set(echo = TRUE)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(~visit+room) + labs(title = "Visualize the Data")+theme(legend.key.size=unit(2,'cm'));
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(~visit+room) + labs(title = "Visualize the Data")+theme(legend.key.width=unit(2,'cm'));
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(~visit+room) + labs(title = "Visualize the Data")+theme(legend.key.width=unit(10,'cm'));
}
id.Visualize(20)
opts_chunk$set(width=15, height=15)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(width=15, height=15)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(~visit+room) + labs(title = "Visualize the Data")+theme(legend.key.width=unit(10,'cm'));
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + labs(title = "Visualize the Data");
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + labs(title = "id=20 (whole data)");
g + geom_point(alpha = 1/5 , size = 1) + labs(title = "id=20 (different rooms and visits)");
}
id.Visualize(20)
?theme
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + labs(title = "id=20 (whole data)") +
}
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + labs(title = "id=20 (whole data)") + theme(width = 10)
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + labs(title = "id=20 (whole data)") + theme(axis.text.x = element_text(face="bold", color="blue", size=8), plot.margin = unit(c(2,3,3,4),"cm"))
}
id.Visualize(20)
?labs
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(2,3,3,4),"cm"))
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(2,3,3,4),"cm"))
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(10,10,3,4),"cm"))
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0.1,0.1,0.1,0.1),"cm"))
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0.1,0.1,0.1,0.1),"cm"))
}
id.Visualize(20)
？theme
?theme
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(width=30, height=30)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0,0,0,0),"cm"),panel.border = 10)
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0,0,0,0),"cm") )
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0,0,0,0),"cm"))
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0,0,0,0),"cm"))
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 5) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0,0,0,0),"cm"))
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 4) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0,0,0,0),"cm"))
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room) + labs(title = "id=20 (whole data)") + theme( plot.margin = unit(c(0,0,0,0),"cm"))
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(width=30, height=30)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 1) + facet_wrap(visit ~ room, scales='free') + theme( plot.margin = unit(c(0,0,0,0),"cm"))
}
id.Visualize(20)
CheckError<- function(mie.sub){
if(nrow(mie.sub) == 0){
stop("The mie data is not valid for this input")
}
}
check_pkg_deps <- function() {
if(!require(readr)) {
message("installing the 'readr' package")
install.packages("readr")
require(readr)
}
if(!require(dplyr)){
message("installing the 'dplyr' package")
install.packages("dplyr")
require(dplyr)
}
if(!require(ggplot2)){
message("installing the 'ggplot2' package")
install.packages("ggplot2")
require(ggplot2)
}
}
id.Visualize(20)
id.Visualize <- function(id){
id.tmp=id
check_pkg_deps()
mie <- read_csv("MIE.zip", col_types = "cicdi")
mie.sub <- mie %>% filter(id == id.tmp)
CheckError(mie.sub)
g <- ggplot(mie.sub, aes(timepoint,value))
g + geom_point(alpha = 1/5 , size = 4) + facet_wrap(visit ~ room, scales='free') + theme( plot.margin = unit(c(0,0,0,0),"cm"))
}
id.Visualize(20)
princomp
prcomp
iris
princomp(iris)
cube = function(x) x ^ 3
cube(x)
plot.function(cube)
plot.function(cube, from = 0, to = 10)
methods(plot)
?setMethod
?setClass
library(devtool)
install.packages("devtool")
